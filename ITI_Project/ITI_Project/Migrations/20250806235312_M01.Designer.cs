// <auto-generated />
using ITI_Project.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITI_Project.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250806235312_M01")]
    partial class M01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ITI_Project.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices and gadgets like phones, laptops, and TVs.",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A wide variety of books from fiction to non-fiction.",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Apparel for men, women, and children of all ages.",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Items to decorate and furnish your home beautifully.",
                            Name = "Home Decor"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Gear and clothing for different types of sports activities.",
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("ITI_Project.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Latest model with powerful processor and camera.",
                            ImagePath = "images/smartphone.jpg",
                            Price = 8999.99m,
                            Quantity = 50,
                            Title = "Smartphone"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            Description = "Comfortable and durable shoes for daily running.",
                            ImagePath = "images/shoes.jpg",
                            Price = 799.50m,
                            Quantity = 100,
                            Title = "Running Shoes"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Genuine leather wallet with multiple card slots.",
                            ImagePath = "images/wallet.jpg",
                            Price = 299.00m,
                            Quantity = 75,
                            Title = "Leather Wallet"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Wireless headphones with noise cancellation.",
                            ImagePath = "images/headphones.jpg",
                            Price = 1299.99m,
                            Quantity = 30,
                            Title = "Bluetooth Headphones"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Bestselling novel with an intriguing storyline.",
                            ImagePath = "images/novel.jpg",
                            Price = 99.00m,
                            Quantity = 80,
                            Title = "Fiction Novel"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 4,
                            Description = "LED table lamp with adjustable brightness.",
                            ImagePath = "images/lamp.jpg",
                            Price = 399.50m,
                            Quantity = 90,
                            Title = "Table Lamp"
                        });
                });

            modelBuilder.Entity("ITI_Project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "ahmed.ali@example.com",
                            FirstName = "Ahmed",
                            LastName = "Ali",
                            Password = "Password123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "mona.hassan@example.com",
                            FirstName = "Mona",
                            LastName = "Hassan",
                            Password = "MonaPass456"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "khaled.youssef@example.com",
                            FirstName = "Khaled",
                            LastName = "Youssef",
                            Password = "Khaled789!"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "salma.ibrahim@example.com",
                            FirstName = "Salma",
                            LastName = "Ibrahim",
                            Password = "SalmaPass12"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "tamer.saad@example.com",
                            FirstName = "Tamer",
                            LastName = "Saad",
                            Password = "Tamer_12345"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "rana.farouk@example.com",
                            FirstName = "Rana",
                            LastName = "Farouk",
                            Password = "RanaPass987"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "youssef.hamed@example.com",
                            FirstName = "Youssef",
                            LastName = "Hamed",
                            Password = "Youss_2023"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "nour.gamal@example.com",
                            FirstName = "Nour",
                            LastName = "Gamal",
                            Password = "NourPass321"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "omar.elsayed@example.com",
                            FirstName = "Omar",
                            LastName = "ElSayed",
                            Password = "OmarPass444"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "laila.adel@example.com",
                            FirstName = "Laila",
                            LastName = "Adel",
                            Password = "Laila2022$"
                        });
                });

            modelBuilder.Entity("ITI_Project.Models.Product", b =>
                {
                    b.HasOne("ITI_Project.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ITI_Project.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
